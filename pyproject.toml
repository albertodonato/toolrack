[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
]

[project]
name = "toolrack"
description = "A collection of miscellaneous utility functions and classes"
readme = "README.rst"
keywords = [
  "asyncio",
  "library",
  "utility",
]
license = { file = "LICENSE.txt" }
maintainers = [
  { name = "Alberto Donato", email = "alberto.donato@gmail.com" },
]
authors = [
  { name = "Alberto Donato", email = "alberto.donato@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "pytest",
]
optional-dependencies.testing = [
  "pytest-asyncio",
  "pytest-mock",
]
urls.changelog = "https://github.com/albertodonato/toolrack/blob/main/CHANGES.rst"
urls.documentation = "https://readthedocs.org/projects/toolrack/"
urls.homepage = "https://github.com/albertodonato/toolrack"
urls.repository = "https://github.com/albertodonato/toolrack"
scripts.cert-info = "toolrack.scripts.certinfo:script"
scripts.password-generator = "toolrack.scripts.password_generator:script"

[tool.setuptools.dynamic]
version = { attr = "toolrack.__version__" }

[tool.setuptools.packages.find]
include = [ "toolrack*" ]

[tool.setuptools.package-data]
toolrack = [ "py.typed" ]

[tool.ruff]
line-length = 79

lint.select = [ "I", "RUF", "UP" ]
lint.isort.combine-as-imports = true
lint.isort.force-sort-within-sections = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
fail_under = 100.0
show_missing = true
skip_covered = true

[tool.coverage.run]
source = [ "toolrack" ]
omit = [ "toolrack/scripts/*" ]

[tool.mypy]
ignore_missing_imports = true
install_types = true
non_interactive = true
warn_return_any = true
warn_unused_configs = true
