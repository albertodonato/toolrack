[metadata]
name = toolrack
version = 3.0.0
license = LGPLv3+
description = A collection of miscellaneous utility functions and classes
long_description = file: README.rst
author = Alberto Donato
author_email = alberto.donato@gmail.com
maintainer = Alberto Donato
maintainer_email = alberto.donato@gmail.com
url = https://github.com/albertodonato/toolrack
keywords = library utility asyncio
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Utilities
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules

[options]
python_requires = >= 3.6
install_requires =
packages = find:
include_package_data = True

[options.packages.find]
include =
    toolrack
    toolrack.*

[options.extras_require]
testing =
    pytest
    pytest-asyncio
    pytest-mock

[options.entry_points]
console_scripts =
    cert-info = toolrack.scripts.certinfo:script
    password-generator = toolrack.scripts.password_generator:script

[globals]
lint_files = setup.py toolrack

[coverage:run]
source = toolrack
omit =
    toolrack/scripts/*

[coverage:report]
show_missing = True
fail_under = 100.0
skip_covered = True

[flake8]
max-line-length = 80
select = C, E, F, W, B, B950
ignore = E203, E501, W503

[mypy]
incremental = False
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

[tox:tox]
skipsdist = True
envlist = format, lint, check, coverage

[testenv]
deps =
    .
    .[testing]
commands =
    {envbindir}/pytest {posargs}

[testenv:format]
deps =
    black
    isort
commands =
    {envbindir}/isort {[globals]lint_files}
    {envbindir}/black -q {[globals]lint_files}

[testenv:lint]
deps =
    black
    flake8
    isort
commands =
    {envbindir}/isort --check-only --diff {[globals]lint_files}
    {envbindir}/black --check {[globals]lint_files}
    {envbindir}/flake8 {[globals]lint_files}

[testenv:check]
deps =
    mypy
commands =
    {envbindir}/mypy -p toolrack {posargs}

[testenv:coverage]
deps =
    .
    .[testing]
    pytest-cov
commands =
    {envbindir}/pytest --cov {posargs}

[testenv:docs]
deps =
    .
    sphinx
    sphinx-autodoc-typehints
commands =
    sphinx-build -b html docs html {posargs}

